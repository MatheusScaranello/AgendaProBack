generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int       @id @default(autoincrement())
  nome      String
  email     String    @unique
  senha     String
  clientes  Cliente[]
  agendamentos Agendamento[]
}

model Cliente {
  id           Int       @id @default(autoincrement())
  nome         String
  telefone     String?
  email        String?
  anotacoes    String?
  ticketMedio  Float     @default(0)
  totalGasto   Float     @default(0)
  frequencia   Int       @default(0)
  antiFurao    Boolean   @default(false)
  usuarioId    Int
  usuario      Usuario   @relation(fields: [usuarioId], references: [id])
  agendamentos Agendamento[]
  pagamentos   Pagamento[]
}

model Agendamento {
  id            Int        @id @default(autoincrement())
  dataHora      DateTime
  status        String      @default("pendente") // pendente, confirmado, cancelado
  clienteId     Int
  usuarioId     Int
  cliente       Cliente     @relation(fields: [clienteId], references: [id])
  usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  pagamento     Pagamento?
}

model Pagamento {
  id            Int        @id @default(autoincrement())
  valor         Float
  metodo        String     // pix, cartao, boleto
  status        String     @default("aguardando") // aguardando, pago, estornado
  agendamentoId Int
  clienteId     Int
  agendamento   Agendamento @relation(fields: [agendamentoId], references: [id])
  cliente       Cliente     @relation(fields: [clienteId], references: [id])
}

model Cancelamento {
  id            Int        @id @default(autoincrement())
  motivo        String?
  taxaAplicada  Float      @default(0)
  agendamentoId Int
  agendamento   Agendamento @relation(fields: [agendamentoId], references: [id])
}

model Espera {
  id        Int       @id @default(autoincrement())
  clienteId Int
  dataHora  DateTime
  cliente   Cliente   @relation(fields: [clienteId], references: [id])
}
